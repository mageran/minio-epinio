{
    "apiVersion": "application.epinio.io/v1",
    "kind": "Service",
    "metadata": {
        "annotations": {
            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"application.epinio.io/v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{\"meta.helm.sh/release-name\":\"epinio\",\"meta.helm.sh/release-namespace\":\"epinio\"},\"creationTimestamp\":\"2023-02-21T04:16:35Z\",\"generation\":1,\"labels\":{\"app.kubernetes.io/managed-by\":\"Helm\"},\"name\":\"redis-dev\",\"namespace\":\"epinio\",\"resourceVersion\":\"8001\",\"uid\":\"975fbd08-4cd1-498b-96c3-84d372eb4e2d\"},\"spec\":{\"appVersion\":\"7.0.7\",\"chart\":\"redis\",\"chartVersion\":\"17.3.17\",\"description\":\"This service is going to deploy a simple default Bitnami Redis instance.\\nYou can find more info at https://github.com/bitnami/charts/tree/master/bitnami/redis/.\\nThis database is running inside the cluster so it's probably not a good choice for production\\nenvironments, at least with this default configuration.\\n\",\"helmRepo\":{\"name\":\"bitnami\",\"url\":\"https://charts.bitnami.com/bitnami\"},\"name\":\"redis-dev\",\"serviceIcon\":\"https://bitnami.com/assets/stacks/redis/img/redis-stack-220x234.png\",\"shortDescription\":\"A Redis service that can be used during development\",\"values\":\"extraDeploy:\\n  - |\\n    # Create a service account, role and binding to allow to list, get and\\n    # delete PVCs. It should be used by the job below.\\n\\n    # To ensure the resources are deleted, use this annotation:\\n    #\\n    # annotations:\\n    #  \\\"helm.sh/hook-delete-policy\\\": before-hook-creation,hook-succeeded\\n\\n    # https://helm.sh/docs/topics/charts_hooks/#hook-resources-are-not-managed-with-corresponding-releases\\n    # https://helm.sh/docs/topics/charts_hooks/#hook-deletion-policies\\n\\n    ---\\n    apiVersion: v1\\n    kind: ServiceAccount\\n    metadata:\\n      name: \\\"pvc-deleter-{{ .Release.Name }}\\\"\\n      namespace: {{ .Release.Namespace }}\\n      annotations:\\n        \\\"helm.sh/hook-delete-policy\\\": before-hook-creation,hook-succeeded\\n        \\\"helm.sh/hook\\\": post-delete\\n        \\\"helm.sh/hook-weight\\\": \\\"-6\\\"\\n\\n    ---\\n    apiVersion: {{ include \\\"common.capabilities.rbac.apiVersion\\\" . }}\\n    kind: Role\\n    metadata:\\n      name: \\\"pvc-deleter-{{ .Release.Name }}\\\"\\n      namespace: {{ .Release.Namespace }}\\n      annotations:\\n        \\\"helm.sh/hook-delete-policy\\\": before-hook-creation,hook-succeeded\\n        \\\"helm.sh/hook\\\": post-delete\\n        \\\"helm.sh/hook-weight\\\": \\\"-6\\\"\\n    rules:\\n      - apiGroups:\\n          - \\\"\\\"\\n        resources:\\n          - persistentvolumeclaims\\n        verbs:\\n          - get\\n          - delete\\n          - list\\n\\n    ---\\n    kind: RoleBinding\\n    apiVersion: {{ include \\\"common.capabilities.rbac.apiVersion\\\" . }}\\n    metadata:\\n      name: \\\"pvc-deleter-{{ .Release.Name }}\\\"\\n      namespace: {{ .Release.Namespace }}\\n      annotations:\\n        \\\"helm.sh/hook-delete-policy\\\": before-hook-creation,hook-succeeded\\n        \\\"helm.sh/hook\\\": post-delete\\n        \\\"helm.sh/hook-weight\\\": \\\"-5\\\"\\n    subjects:\\n      - kind: ServiceAccount\\n        name: \\\"pvc-deleter-{{ .Release.Name }}\\\"\\n    roleRef:\\n      apiGroup: rbac.authorization.k8s.io\\n      kind: Role\\n      name: \\\"pvc-deleter-{{ .Release.Name }}\\\"\\n\\n    ---\\n    apiVersion: batch/v1\\n    kind: Job\\n    metadata:\\n      name: \\\"pvc-deleter-{{ .Release.Name }}\\\"\\n      labels:\\n        app.kubernetes.io/managed-by: {{ .Release.Service | quote }}\\n        app.kubernetes.io/instance: {{ .Release.Name | quote }}\\n        app.kubernetes.io/version: {{ .Chart.AppVersion }}\\n        helm.sh/chart: \\\"{{ .Chart.Name }}-{{ .Chart.Version }}\\\"\\n      annotations:\\n        # This is what defines this resource as a hook. Without this line, the\\n        # job is considered part of the release.\\n        \\\"helm.sh/hook\\\": post-delete\\n        \\\"helm.sh/hook-weight\\\": \\\"-4\\\"\\n        \\\"helm.sh/hook-delete-policy\\\": hook-succeeded\\n    spec:\\n      template:\\n        metadata:\\n          name: \\\"pvc-deleter-{{ .Release.Name }}\\\"\\n          labels:\\n            app.kubernetes.io/managed-by: {{ .Release.Service | quote }}\\n            app.kubernetes.io/instance: {{ .Release.Name | quote }}\\n            helm.sh/chart: \\\"{{ .Chart.Name }}-{{ .Chart.Version }}\\\"\\n        spec:\\n          restartPolicy: Never\\n          serviceAccountName: \\\"pvc-deleter-{{ .Release.Name }}\\\"\\n          containers:\\n          - name: post-install-job\\n            image: \\\"rancher/kubectl:v1.22.6\\\"\\n            command: [\\\"kubectl\\\", \\\"delete\\\", \\\"pvc\\\", \\\"-n\\\", \\\"{{ .Release.Namespace }}\\\", \\\"-l\\\", \\\"app.kubernetes.io/instance={{ .Release.Name }}\\\"]\"}}\n",
            "meta.helm.sh/release-name": "epinio",
            "meta.helm.sh/release-namespace": "epinio"
        },
        "creationTimestamp": "2023-02-21T04:16:35Z",
        "generation": 1,
        "labels": {
            "app.kubernetes.io/managed-by": "Helm"
        },
        "name": "minio-service-dev",
        "namespace": "epinio",
        "resourceVersion": "8425",
        "uid": "975fbd08-4cd1-498b-96c3-84d372eb4e2d"
    },
    "spec": {
        "appVersion": "v1",
        "chart": "minio-service-dev",
        "chartVersion": "0.1.0",
        "description": "This service is going to deploy a service that provides access to the minio instance used by epinio.\n",
        "helmRepo": {
            "name": "mageran",
            "url": "https://mageran.github.io/helm-charts-repo"
        },
        "name": "minio-service-dev",
        "serviceIcon": "https://mageran.github.io/helm-charts-repo/images/fox-logo.png",
        "shortDescription": "A Minio service that can be used during development",
        "values": "extraDeploy:\n  - |\n    # Create a service account, role and binding to allow to list, get and\n    # delete PVCs. It should be used by the job below.\n\n    # To ensure the resources are deleted, use this annotation:\n    #\n    # annotations:\n    #  \"helm.sh/hook-delete-policy\": before-hook-creation,hook-succeeded\n\n    # https://helm.sh/docs/topics/charts_hooks/#hook-resources-are-not-managed-with-corresponding-releases\n    # https://helm.sh/docs/topics/charts_hooks/#hook-deletion-policies\n\n    ---\n    apiVersion: v1\n    kind: ServiceAccount\n    metadata:\n      name: \"pvc-deleter-{{ .Release.Name }}\"\n      namespace: {{ .Release.Namespace }}\n      annotations:\n        \"helm.sh/hook-delete-policy\": before-hook-creation,hook-succeeded\n        \"helm.sh/hook\": post-delete\n        \"helm.sh/hook-weight\": \"-6\"\n\n    ---\n    apiVersion: {{ include \"common.capabilities.rbac.apiVersion\" . }}\n    kind: Role\n    metadata:\n      name: \"pvc-deleter-{{ .Release.Name }}\"\n      namespace: {{ .Release.Namespace }}\n      annotations:\n        \"helm.sh/hook-delete-policy\": before-hook-creation,hook-succeeded\n        \"helm.sh/hook\": post-delete\n        \"helm.sh/hook-weight\": \"-6\"\n    rules:\n      - apiGroups:\n          - \"\"\n        resources:\n          - persistentvolumeclaims\n        verbs:\n          - get\n          - delete\n          - list\n\n    ---\n    kind: RoleBinding\n    apiVersion: {{ include \"common.capabilities.rbac.apiVersion\" . }}\n    metadata:\n      name: \"pvc-deleter-{{ .Release.Name }}\"\n      namespace: {{ .Release.Namespace }}\n      annotations:\n        \"helm.sh/hook-delete-policy\": before-hook-creation,hook-succeeded\n        \"helm.sh/hook\": post-delete\n        \"helm.sh/hook-weight\": \"-5\"\n    subjects:\n      - kind: ServiceAccount\n        name: \"pvc-deleter-{{ .Release.Name }}\"\n    roleRef:\n      apiGroup: rbac.authorization.k8s.io\n      kind: Role\n      name: \"pvc-deleter-{{ .Release.Name }}\"\n\n    ---\n    apiVersion: batch/v1\n    kind: Job\n    metadata:\n      name: \"pvc-deleter-{{ .Release.Name }}\"\n      labels:\n        app.kubernetes.io/managed-by: {{ .Release.Service | quote }}\n        app.kubernetes.io/instance: {{ .Release.Name | quote }}\n        app.kubernetes.io/version: {{ .Chart.AppVersion }}\n        helm.sh/chart: \"{{ .Chart.Name }}-{{ .Chart.Version }}\"\n      annotations:\n        # This is what defines this resource as a hook. Without this line, the\n        # job is considered part of the release.\n        \"helm.sh/hook\": post-delete\n        \"helm.sh/hook-weight\": \"-4\"\n        \"helm.sh/hook-delete-policy\": hook-succeeded\n    spec:\n      template:\n        metadata:\n          name: \"pvc-deleter-{{ .Release.Name }}\"\n          labels:\n            app.kubernetes.io/managed-by: {{ .Release.Service | quote }}\n            app.kubernetes.io/instance: {{ .Release.Name | quote }}\n            helm.sh/chart: \"{{ .Chart.Name }}-{{ .Chart.Version }}\"\n        spec:\n          restartPolicy: Never\n          serviceAccountName: \"pvc-deleter-{{ .Release.Name }}\"\n          containers:\n          - name: post-install-job\n            image: \"rancher/kubectl:v1.22.6\"\n            command: [\"kubectl\", \"delete\", \"pvc\", \"-n\", \"{{ .Release.Namespace }}\", \"-l\", \"app.kubernetes.io/instance={{ .Release.Name }}\"]"
    }
}
